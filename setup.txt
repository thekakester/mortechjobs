CREATE DATABASE mortech_jobs;
use mortech_jobs;
CREATE TABLE users(id INT AUTO_INCREMENT PRIMARY KEY, user VARCHAR(255) UNIQUE NOT NULL, pass VARCHAR(255) NOT NULL, fName TEXT NOT NULL, lName TEXT NOT NULL, email TEXT NOT NULL, title TEXT NOT NULL);  
CREATE TABLE permissions (id INT AUTO_INCREMENT PRIMARY KEY, uid INT NOT NULL, permCreateUser BOOLEAN NOT NULL, permTest BOOLEAN NOT NULL, revuid INT NOT NULL, revutc INT NOT NULL, FOREIGN KEY(uid) REFERENCES users(id), FOREIGN KEY(revuid) REFERENCES users(id));
CREATE TABLE tasks (id INT AUTO_INCREMENT PRIMARY KEY, tid INT NOT NULL, jid INT, openDate INT NOT NULL, closeDate INT, dueDate INT NOT NULL, description TEXT NOT NULL, owner INT NOT NULL, FOREIGN KEY(jid) REFERENCES jobs(id), FOREIGN KEY(owner) REFERENCES users(id));
CREATE TABLE jobs (id INT AUTO_INCREMENT PRIMARY KEY, jid INT NOT NULL, year INT NOT NULL, category INT  NOT NULL, openDate INT NOT NULL, uid INT NOT NULL, releaseDate INT NOT NULL, dueDate INT NOT NULL, plant INT NOT NULL, description TEXT NOT NULL, pm INT NOT NULL, closeDate INT NOT NULL, revuid INT, revutc INT, FOREIGN KEY(category) REFERENCES categories(id), FOREIGN KEY(uid) REFERENCES users(id), FOREIGN KEY(plant) REFERENCES plants(id), FOREIGN KEY(pm) REFERENCES users(id), FOREIGN KEY(revuid) REFERENCES users(id));
CREATE TABLE contacts (id INT AUTO_INCREMENT PRIMARY KEY, fName TEXT NOT NULL, lName TEXT NOT NULL, email TEXT NOT NULL, custId INT NOT NULL, plantId INT NOT NULL, phNum TEXT, FOREIGN KEY(custId) REFERENCES customers(id), FOREIGN KEY(plantId) REFERENCES plants(id));
CREATE TABLE plants (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, custId INT NOT NULL, shipAddress INT NOT NULL, FOREIGN KEY(custId) REFERENCES customers(id), FOREIGN KEY(shipAddress) REFERENCES addresses(id));
CREATE TABLE pos (id INT AUTO_INCREMENT PRIMARY KEY, poNum TEXT NOT NULL, jid INT NOT NULL, FOREIGN KEY(jid) REFERENCES jobs(id));
CREATE TABLE customers (id INT AUTO_INCREMENT PRIMARY KEY, name TEXT NOT NULL, billAddress INT NOT NULL, FOREIGN KEY(billAddress) REFERENCES addresses(id));
CREATE TABLE contacts_on_pos (id INT AUTO_INCREMENT PRIMARY KEY, poid INT NOT NULL, contactId INT NOT NULL, relationship INT NOT NULL, FOREIGN KEY(poid) REFERENCES pos(id), FOREIGN KEY(contactId) REFERENCES contacts(id), FOREIGN KEY(relationship) REFERENCES relationships(id));
CREATE TABLE engineers_on_jobs (id INT AUTO_INCREMENT PRIMARY KEY, contactId INT NOT NULL, jid INT NOT NULL, FOREIGN KEY(contactId) REFERENCES contacts(id), FOREIGN KEY(jid) REFERENCES jobs(id));
CREATE TABLE designers_on_jobs (id INT AUTO_INCREMENT PRIMARY KEY, uid INT NOT NULL, jid INT NOT NULL, FOREIGN KEY(uid) REFERENCES users(id), FOREIGN KEY(jid) REFERENCES jobs(id));
CREATE TABLE controls_on_jobs (id INT AUTO_INCREMENT PRIMARY KEY, uid INT NOT NULL, jid INT NOT NULL, FOREIGN KEY(uid) REFERENCES users(id), FOREIGN KEY(jid) REFERENCES jobs(id));
CREATE TABLE categories(id INT AUTO_INCREMENT PRIMARY KEY, description VARCHAR(255) NOT NULL);  
CREATE TABLE tools(id INT AUTO_INCREMENT PRIMARY KEY, num VARCHAR(255) NOT NULL, description VARCHAR(255) NOT NULL);  
CREATE TABLE quotes(id INT AUTO_INCREMENT PRIMARY KEY, quoteNum INT NOT NULL, customer INT NOT NULL, utc INT NOT NULL, author INT NOT NULL, jid INT, delivery TEXT NOT NULL, terms TEXT NOT NULL, FOREIGN KEY(customer) REFERENCES customers(id), FOREIGN KEY(author) REFERENCES users(id), FOREIGN KEY(jid) REFERENCES jobs(id));
CREATE TABLE tools_on_jobs (id INT AUTO_INCREMENT PRIMARY KEY, toolId INT NOT NULL, jid INT NOT NULL, FOREIGN KEY(toolId) REFERENCES tools(id), FOREIGN KEY(jid) REFERENCES jobs(id));
CREATE TABLE relationships(id INT AUTO_INCREMENT PRIMARY KEY, title VARCHAR(255) NOT NULL);
CREATE TABLE addresses (id INT AUTO_INCREMENT PRIMARY KEY, city TEXT NOT NULL, state TEXT NOT NULL, zip TEXT NOT NULL, country INT NOT NULL);
CREATE TABLE job_notes(id INT AUTO_INCREMENT PRIMARY KEY, jid INT NOT NULL, text TEXT NOT NULL, FOREIGN KEY(jid) REFERENCES jobs(id));
CREATE TABLE task_notes(id INT AUTO_INCREMENT PRIMARY KEY, tid INT NOT NULL, text TEXT NOT NULL, FOREIGN KEY(tid) REFERENCES tasks(id));